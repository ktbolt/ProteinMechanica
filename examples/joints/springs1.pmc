#============================================================*
#                test for protein                            *
#============================================================*
system echo = off
system verbose = false

# set units
#----------
units
units scale  name = mass   uname = reducedMass   value = 10000.0

# read molecule 
#--------------
database open name = neck   format = pdb  file = ../data/iq123.pdb
molecule read  name = protein  database = neck
molecule protein  xform  rotation = [ 0 0 40 ] 

# create domains
#---------------
domain create hc = C

domain create hcPca = C[780-796]
domain hcPca  pca  atom_names = { CA }  show = true

domain create iq1 = C[760-788]
domain iq1 backbone color = [ 1 0 0 ] width = 2 show=true

domain create iq2 = C[788-814]
domain iq2 backbone color = [ 0 1 0 ] width = 2 show=true


# create bodies from domains
#---------------------------
body create  name = ground    type = ground
body create  name = iq1_body  type = rigid   domain = iq1
body create  name = iq2_body  type = rigid   domain = iq2

# create joints 
#--------------

# 1st joint 
# ---------
joint create  name = jnt1   type = weld position = hc:C[760]:CA 
joint jnt1 bodies = { ground iq1_body }
joint jnt1 color = [ 1 1 1 ] msize = 0.1 shading = color show = true 

# 2nd joint 
# ---------
variable k = 50
joint create  name = jnt2  type = ball  position = hc:C[788]:CA              \
              use_pca = true  pca_res = hc:C[780-796]:CA                     \
              axis1 = pca1  axis2 = pca2                                     \
              force_const1 = ${k}  force_const2 = ${k} force_const3 = ${k}
joint jnt2 bodies = { iq1_body iq2_body }
joint jnt2 color = [ 1 1 1 ] msize = 0.05  show_axes = true  shading = flat show = true

# create a rigid simulation
#--------------------------
simulation create name = rsim  type = rigid

# add bodies
#-----------
simulation rsim add bodies = { ground  iq1_body iq2_body }

# add joints
#-----------
simulation rsim add joints = { jnt1 jnt2 }

# set solver
#-----------
simulation rsim solver = ode
simulation rsim solver finite_rotation = on

# add forces
#-----------
force create name = force2  type = explicit torque = true \
      point = [ 0 0 0 ] direction = [ 0 0 10 ]  
simulation rsim add force = force2 body = iq2_body  time = { 0 1 }

# add trace
#----------
simulation rsim  add trace  name = trace1  color = [ 1 1 0 ]  \
           global_frame = true  point = iq2:C[814]:CA         \
           body = iq2_body  show = true

simulation rsim  add trace  name = trace2  color = [ 1 1 0 ]  \
           global_frame = true  point = iq2                   \
           body = iq2_body  show = true


# initialize simulation
#----------------------
simulation rsim initialize
simulation rsim time step = 0.005 

# step simulation
#----------------
simulation rsim step = 10000 


